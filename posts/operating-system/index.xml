<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Operating System on ztqakita's Blog</title><link>https://ztqakita.github.io/posts/operating-system/</link><description>Recent content in Operating System on ztqakita's Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 10 Dec 2020 06:00:20 +0600</lastBuildDate><atom:link href="https://ztqakita.github.io/posts/operating-system/index.xml" rel="self" type="application/rss+xml"/><item><title>File System</title><link>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_6/</link><pubDate>Thu, 10 Dec 2020 06:00:20 +0600</pubDate><guid>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_6/</guid><description>Chapter 10 File System Chapter 11 File System Inplementation</description></item><item><title>Mass-Storage Structure &amp; I/O System</title><link>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_7/</link><pubDate>Thu, 10 Dec 2020 06:00:20 +0600</pubDate><guid>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_7/</guid><description>Chapter 12 Mass-Storage Structure hard disk drives(HDDs) and nonvolatile memory (NVM)
12.1-12.2 Disk Structure Mapping between disk and blocks 并行快速读取多个连续的blocks/sectors
Transfer rate: the rate at which data flow between the driver and the computer
The position time:
seek time: the time for the disk to move the disk arm to the cylinder containing the desired sector.平均为移动1/2*(总磁道数)所需的时间 rotational latency: the time for the desired sector to rotate to the disk head.</description></item><item><title>Memory Management</title><link>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_5/</link><pubDate>Fri, 13 Nov 2020 06:00:20 +0600</pubDate><guid>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_5/</guid><description>Chapter 8 Memeory Management 8.1 Background Address Space: the memory scope that the process can access(可访问的(内)存储区范围)
A pair of base register and limit register define the logical address space 8.1.2 Address Binding Chapter 9 Virtual Memory</description></item><item><title>Process Synchronization</title><link>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_4/</link><pubDate>Wed, 14 Oct 2020 06:00:20 +0600</pubDate><guid>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_4/</guid><description>Chapter 6 Process Synchronization 6.1 Background 6.1.1 Shared resources Def:
the resources (e.g., data, CPU, I/O ports, memory) that can be accessed by several cooperating processes concurrently the shared resources cannot be used by several processes simultaneously (or in parallel), only be used mutual exclusively(互斥) 信号量的三种用法：
资源互斥使用：资源只有1个实例，各个进程通过二元信号量mutex互斥地进入临界区，使用资源。 Mutex：代表资源的控制权，初值为1。 mutex = 1：buffer空闲 mutex = 0：buffer阻塞 资源竞争使用： 资源有多个实例，允许多个进程竞争使用资源。 多元信号量表示：(1)资源可用数目，(2)资源使用权 e.g. empty, full 进程间同步： 进程间的执行步骤需要有先后顺序关系 同步二元信号sync，初值为0 sync = 0：未开始跑 sync = 1：前面进程跑完 6.</description></item><item><title>CPU Scheduling</title><link>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_3/</link><pubDate>Mon, 12 Oct 2020 06:00:20 +0600</pubDate><guid>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_3/</guid><description>Chapter 5 CPU Scheduling 5.1 Concepts on Scheduling 5.1.1 basic concepts CPU Scheduling: (短期调度) ==selecting + allocating + enabling, in kernel mode.== The procedure of selecting running entities in main memory ( i.e., processes or threads in the ready queue) according to some criteria, allocating CPU to the selected running entities, and then enabling them to run on CPU
CPU burst occurs: running state
I/O burst occurs: waiting state</description></item><item><title>Process &amp; Threads</title><link>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_2/</link><pubDate>Mon, 28 Sep 2020 06:00:20 +0600</pubDate><guid>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_2/</guid><description>Chapter 3: Process 3.1 Process Concept 3.1.1 Process Definition A process is
a program in execution the unit of resources (CPU, memory, I/O devices) allocation runs concurrently with other processes Another definition: 具有一定独立功能的某个程序关于某个数据集合的一次运行活动。是系统进行资源分配和调度的独立单位。(又称task，job)
进程的特点：
动态性：可动态地创建、结束进程 并发性：进程可以被独立调度并占用处理机运行(并发&amp;amp;并行) 独立性：不同进程的工作不相互影响 制约性：因访问共享数据/资源或进程同步而产生制约(进程之间有交互、共享等情况) Process = program + data + PCB. 3.1.2 Process State A process is dynamic, and has its lifetime. As a process executes, it changes among the following states: new: the process is being created.</description></item><item><title>Introduction &amp; OS Structure</title><link>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_1/</link><pubDate>Mon, 21 Sep 2020 06:00:20 +0600</pubDate><guid>https://ztqakita.github.io/posts/operating-system/operating_system_concepts_1/</guid><description>Chapter 1: Introduction 1.1 OS Definition A program that acts as an intermediary between a user of a computer and the computer hardware.
Computer System Structure 1.1.1 User View ease of use Do not care about resource utilization! 1.1.2 System View resourse allocator control program 1.2 Computer-System Organization bootstrap program: Typically stored in ROM or EPROM, generally known as firmware. Initializes all aspects of system. Loads operating system kernel and starts execution.</description></item></channel></rss>